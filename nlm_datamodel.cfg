# # # # # # # # # # # # # #
#This maps the information we need onto the NLM xml nodes
# # # # # # # # # # # # # # 

## Note on conventions:

# -  anything starting with doubled __underscore is yet to be decided what predicate should be used
# - things with no prefix, like fulltextElement, are not used as output predicated, but as steps in processing

## "Escape characters"

# chars ":", "[" and "]" must be avoided in the configuation keys and values below, since they have special meanings in the config syntax. Therefore they must be replaced with "&colon;", "&lbrack;" and "&rbrack;" respectively. For example, the paramater name "dc:creator" must be expressed as "dc&colon;creator".


[wrappers]
artWrapperElement: .//front
fulltextElement: .//body
refElement: .//ref
affiliationWrapper: .//aff
#The wrapper for a single citation in the references list

[identifiers]
artIdentifierElement: .//article-id[@pub-id-type="pmc"]
artIdentifierBase: ukpmc.ac.uk/pmc-id/
refIdentifierElement: .//pub-id[@pub-id-type="pmid"]
refIdentifierBase: ukpmc.ac.uk/pmid/
affiliationIdentifier: id

__licenceURL: {http://www.w3.org/1999/xlink}href 
# This Copyright identifier is an attribute that has a namespace - note the syntax in which the namespace has to be provided, and that it must be the *real namespace*, not the prefix used to represent it inline

[artMetadata]
#Various metadata ids...
fabio&colon;hasPubMedCentralId: .//article-id[@pub-id-type="pmc"]
fabio&colon;hasPubMedId: .//article-id[@pub-id-type="pmid"]
dc&colon;identifier: .//article-id[@pub-id-type="publisher-id"]
#This last one is a kind of internal publisher's identifier for the article

dc&colon;title: .//article-title
dc&colon;creator: .//contrib[@contrib-type="author"]

#Journal details
fabio&colon;shortTitle: .//journal-id[@journal-id-type="nlm-ta"]
__sourceTitle: .//journal-title
prism&colon;issn: .//issn[@pub-type="ppub"]
prism&colon;eIssn: .//issn[@pub-type="epub"]
dcterms&colon;publisher: .//publisher-name
__journalIdInternal: .//journal-id[@journal-id-type="publisher-id"]

prism&colon;volume: .//volume
prism&colon;issue: .//issue
prism&colon;startingPage: .//fpage
prism&colon;endingPage: .//lpage

#Date
__printPublicationYear: .//pub-date[@pub-type="ppub"]/year
__ePublicationYear: .//pub-date[@pub-type="epub"]/year

#Copyright
dcterms&colon;rights: .//copyright-statement
dcterms&colon;licence: .//license


[refMetadata]
dc&colon;title: .//article-title
dc&colon;creator: .//person-group/*
#This is the ElementTree way of doing a wildcard node. In true XPath syntax this would be .//person-group/node()
__sourceTitle: .//source
prism&colon;startingPage: .//fpage
prism&colon;endingPage: .//lpage
prism&colon;volume: .//volume
fabio&colon;hasPublicationYear: .//year
typeElement: .//mixed-citation
dcterms&colon;publisher: .//publisher-name
prism&colon;edition: .//edition


[authorMetadata]
foaf&colon;firstName: .//given-names
foaf&colon;familyName: .//surname
affiliationRef: .//xref[@ref-type="aff"]
correspondenceRef: .//xref[@ref-type="corresp"]
v&colon;honorific-suffix: .//degrees


[affiliation]
foaf&colon;name: .//institution
v&colon;adr: .//addr-line


[correspondence]
correspondence: .//corresp
correspondenceIdentifier: id
v&colon;email: .//email


[misc]
rdf&colon;type: publication-type


[xmlNamespaces]
xlink: http://www.w3.org/1999/xlink